version: '3.8'

services:
  api-gateway:
    image: ghcr.io/${GITHUB_REPOSITORY}/api-gateway:latest
    ports:
      - "8080:8080"
    depends_on:
      - auth-service
      - user-management-service
      - scan-orchestration-service
    environment:
      - AUTH_SERVICE_URL=http://auth-service:8081
      - USER_SERVICE_URL=http://user-management-service:8082
      - SCAN_SERVICE_URL=http://scan-orchestration-service:8083
      - MODULE_REGISTRY_URL=http://module-registry-service:8084
      - DATA_COLLECTION_URL=http://data-collection-service:8085
      - DATA_STORAGE_URL=http://data-storage-service:8086
      - CORRELATION_ENGINE_URL=http://correlation-engine-service:8087
      - VISUALIZATION_URL=http://visualization-service:8088
      - REPORTING_URL=http://reporting-service:8089
      - NOTIFICATION_URL=http://notification-service:8090
      - INTEGRATION_URL=http://integration-service:8091
      - CONFIGURATION_URL=http://configuration-service:8092
      - DISCOVERY_URL=http://discovery-service:8093
      - JWT_SECRET=${JWT_SECRET}
      - RATE_LIMIT_REQUESTS_PER_MINUTE=60
    networks:
      - mirage-network
    restart: unless-stopped

  auth-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/auth-service:latest
    ports:
      - "8081:8081"
    depends_on:
      - postgres
      - redis
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mirage_auth
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=${JWT_SECRET}
      - JWT_EXPIRATION=3600
    networks:
      - mirage-network
    restart: unless-stopped

  user-management-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/user-management-service:latest
    ports:
      - "8082:8082"
    depends_on:
      - postgres
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/mirage_users
    networks:
      - mirage-network
    restart: unless-stopped

  scan-orchestration-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/scan-orchestration-service:latest
    ports:
      - "8083:8083"
    depends_on:
      - mongodb
      - redis
      - data-collection-service
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/mirage_scans
      - REDIS_URL=redis://redis:6379
      - DATA_COLLECTION_URL=http://data-collection-service:8084
    networks:
      - mirage-network
    restart: unless-stopped

  module-registry-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/module-registry-service:latest
    ports:
      - "8084:8084"
    depends_on:
      - mongodb
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/mirage_modules
    networks:
      - mirage-network
    restart: unless-stopped

  data-collection-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/data-collection-service:latest
    ports:
      - "8085:8085"
    depends_on:
      - module-registry-service
      - data-storage-service
    environment:
      - MODULE_REGISTRY_URL=http://module-registry-service:8084
      - DATA_STORAGE_URL=http://data-storage-service:8086
    networks:
      - mirage-network
    restart: unless-stopped

  data-storage-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/data-storage-service:latest
    ports:
      - "8086:8086"
    depends_on:
      - mongodb
      - elasticsearch
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/mirage_data
      - ELASTICSEARCH_URL=http://elasticsearch:9200
    networks:
      - mirage-network
    restart: unless-stopped

  correlation-engine-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/correlation-engine-service:latest
    ports:
      - "8087:8087"
    depends_on:
      - neo4j
      - data-storage-service
    environment:
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USERNAME=neo4j
      - NEO4J_PASSWORD=${NEO4J_PASSWORD}
      - DATA_STORAGE_URL=http://data-storage-service:8086
    networks:
      - mirage-network
    restart: unless-stopped

  visualization-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/visualization-service:latest
    ports:
      - "8088:8088"
    depends_on:
      - correlation-engine-service
    environment:
      - CORRELATION_ENGINE_URL=http://correlation-engine-service:8087
    networks:
      - mirage-network
    restart: unless-stopped

  reporting-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/reporting-service:latest
    ports:
      - "8089:8089"
    depends_on:
      - data-storage-service
    environment:
      - DATA_STORAGE_URL=http://data-storage-service:8086
    networks:
      - mirage-network
    restart: unless-stopped

  notification-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/notification-service:latest
    ports:
      - "8090:8090"
    depends_on:
      - redis
    environment:
      - REDIS_URL=redis://redis:6379
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
    networks:
      - mirage-network
    restart: unless-stopped

  integration-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/integration-service:latest
    build:
      context: .
      dockerfile: docker/services/integration-service/Dockerfile
    ports:
      - "8091:8091"
    environment:
      - DATA_STORAGE_URL=http://data-storage-service:8086
      - LOG_LEVEL=info
    networks:
      - mirage-network
    restart: unless-stopped

  configuration-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/configuration-service:latest
    build:
      context: .
      dockerfile: docker/services/configuration-service/Dockerfile
    ports:
      - "8092:8092"
    volumes:
      - config-data:/config
    environment:
      - LOG_LEVEL=info
    networks:
      - mirage-network
    restart: unless-stopped

  discovery-service:
    image: ghcr.io/${GITHUB_REPOSITORY}/discovery-service:latest
    build:
      context: .
      dockerfile: docker/services/discovery-service/Dockerfile
    ports:
      - "8093:8093"
    environment:
      - LOG_LEVEL=info
      - SERVICES_JSON=/app/config/services.json
    networks:
      - mirage-network
    restart: unless-stopped

  web-ui:
    image: ghcr.io/${GITHUB_REPOSITORY}/web-ui:latest
    build:
      context: .
      dockerfile: docker/services/web-ui/Dockerfile
    ports:
      - "3000:80"
    environment:
      - API_URL=http://api-gateway:8080
    depends_on:
      - api-gateway
    networks:
      - mirage-network
    restart: unless-stopped

  postgres:
    image: postgres:14
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=mirage_auth,mirage_users
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-multiple-postgres-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-postgres-dbs.sh
    networks:
      - mirage-network
    restart: unless-stopped

  mongodb:
    image: mongo:5
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    networks:
      - mirage-network
    restart: unless-stopped

  neo4j:
    image: neo4j:4.4
    ports:
      - "7474:7474"
      - "7687:7687"
    environment:
      - NEO4J_AUTH=neo4j/${NEO4J_PASSWORD}
    volumes:
      - neo4j-data:/data
    networks:
      - mirage-network
    restart: unless-stopped

  elasticsearch:
    image: elasticsearch:7.17.0
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - discovery.type=single-node
      - ES_JAVA_OPTS=-Xms512m -Xmx512m
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    networks:
      - mirage-network
    restart: unless-stopped

  redis:
    image: redis:6
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - mirage-network
    restart: unless-stopped

networks:
  mirage-network:
    driver: bridge

volumes:
  postgres-data:
  mongodb-data:
  neo4j-data:
  elasticsearch-data:
  redis-data:
  config-data:
