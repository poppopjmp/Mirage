version: '3.8'

services:
  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: ./docker/services/api-gateway/Dockerfile
    ports:
      - "8000:8000"
    depends_on:
      - auth-service
      - discovery-service
    environment:
      - RUST_LOG=info
      - DISCOVERY_URL=http://discovery-service:8013
      - AUTH_SERVICE_URL=http://auth-service:8001

  # Auth Service
  auth-service:
    build:
      context: .
      dockerfile: ./docker/services/auth-service/Dockerfile
    ports:
      - "8001:8001"
    depends_on:
      - postgres
      - redis
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgres://user:password@postgres:5432/mirage
      - REDIS_URL=redis://redis:6379
      - JWT_SECRET=changeme_in_production

  # User Management Service
  user-management-service:
    build:
      context: .
      dockerfile: ./docker/services/user-management-service/Dockerfile
    ports:
      - "8002:8002"
    depends_on:
      - postgres
    environment:
      - RUST_LOG=info
      - DATABASE_URL=postgres://user:password@postgres:5432/mirage

  # Scan Orchestration Service
  scan-orchestration-service:
    build:
      context: .
      dockerfile: ./docker/services/scan-orchestration-service/Dockerfile
    ports:
      - "8003:8003"
    depends_on:
      - rabbitmq
      - module-registry-service
    environment:
      - RUST_LOG=info
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - MODULE_REGISTRY_URL=http://module-registry-service:8004

  # Module Registry Service
  module-registry-service:
    build:
      context: .
      dockerfile: ./docker/services/module-registry-service/Dockerfile
    ports:
      - "8004:8004"
    depends_on:
      - mongodb
    environment:
      - RUST_LOG=info
      - MONGODB_URI=mongodb://mongodb:27017/mirage
      - MODULES_DIR=/app/modules
    volumes:
      - ./modules:/app/modules

  # Data Collection Service
  data-collection-service:
    build:
      context: .
      dockerfile: ./docker/services/data-collection-service/Dockerfile
    ports:
      - "8005:8005"
    depends_on:
      - rabbitmq
      - module-registry-service
    environment:
      - RUST_LOG=info
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - MODULE_REGISTRY_URL=http://module-registry-service:8004

  # Data Storage Service
  data-storage-service:
    build:
      context: .
      dockerfile: ./docker/services/data-storage-service/Dockerfile
    ports:
      - "8006:8006"
    depends_on:
      - mongodb
      - postgres
      - elasticsearch
    environment:
      - RUST_LOG=info
      - MONGODB_URI=mongodb://mongodb:27017/mirage
      - POSTGRES_URL=postgres://user:password@postgres:5432/mirage
      - ELASTICSEARCH_URL=http://elasticsearch:9200

  # Correlation Engine Service
  correlation-engine-service:
    build:
      context: .
      dockerfile: ./docker/services/correlation-engine-service/Dockerfile
    ports:
      - "8007:8007"
    depends_on:
      - neo4j
      - data-storage-service
    environment:
      - RUST_LOG=info
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - DATA_STORAGE_URL=http://data-storage-service:8006

  # Visualization Service
  visualization-service:
    build:
      context: .
      dockerfile: ./docker/services/visualization-service/Dockerfile
    ports:
      - "8008:8008"
    depends_on:
      - api-gateway
    environment:
      - RUST_LOG=info
      - API_GATEWAY_URL=http://api-gateway:8000

  # Web UI
  web-ui:
    build:
      context: .
      dockerfile: ./docker/services/web-ui/Dockerfile
    ports:
      - "80:80"
    depends_on:
      - api-gateway

  # Reporting Service
  reporting-service:
    build:
      context: .
      dockerfile: ./docker/services/reporting-service/Dockerfile
    ports:
      - "8009:8009"
    depends_on:
      - data-storage-service
    environment:
      - RUST_LOG=info
      - DATA_STORAGE_URL=http://data-storage-service:8006

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: ./docker/services/notification-service/Dockerfile
    ports:
      - "8010:8010"
    depends_on:
      - rabbitmq
      - redis
    environment:
      - RUST_LOG=info
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672
      - REDIS_URL=redis://redis:6379

  # Integration Service
  integration-service:
    build:
      context: .
      dockerfile: ./docker/services/integration-service/Dockerfile
    ports:
      - "8011:8011"
    environment:
      - RUST_LOG=info
      - PLUGINS_DIR=/app/plugins
    volumes:
      - ./plugins:/app/plugins

  # Configuration Service
  configuration-service:
    build:
      context: .
      dockerfile: ./docker/services/configuration-service/Dockerfile
    ports:
      - "8012:8012"
    volumes:
      - ./config:/app/config
    environment:
      - LOG_LEVEL=info

  # Discovery Service
  discovery-service:
    build:
      context: .
      dockerfile: ./docker/services/discovery-service/Dockerfile
    ports:
      - "8013:8013"
    environment:
      - RUST_LOG=info

  # Databases and Message Broker
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=mirage
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  mongodb:
    image: mongo:6-jammy
    volumes:
      - mongodb_data:/data/db
    ports:
      - "27017:27017"

  elasticsearch:
    image: elasticsearch:8.8.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"

  neo4j:
    image: neo4j:5
    environment:
      - NEO4J_AUTH=neo4j/password
    volumes:
      - neo4j_data:/data
    ports:
      - "7474:7474"
      - "7687:7687"

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  postgres_data:
  mongodb_data:
  elasticsearch_data:
  neo4j_data:
